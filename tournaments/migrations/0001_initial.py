# Generated by Django 5.0.3 on 2024-04-02 20:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('icon', models.ImageField(null=True, upload_to='tournament_icons/')),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournaments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_title', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first_speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='first_speaker_join_requests', to=settings.AUTH_USER_MODEL)),
                ('second_speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='second_speaker_join_requests', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='join_requests', to='tournaments.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentJudge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judges', to='tournaments.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judges', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentJudgePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judge_points', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judge_points', to='tournaments.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.IntegerField()),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to='tournaments.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('resolution', models.TextField()),
                ('is_closed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rounds', to='tournaments.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first_speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='first_speaker_teams', to=settings.AUTH_USER_MODEL)),
                ('second_speaker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='second_speaker_teams', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teams', to='tournaments.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentRoundPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='round_points', to='tournaments.tournamentround')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='round_points', to='tournaments.tournamentteam')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentRoomTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('opening_government', 'opening_government'), ('closing_government', 'closing_government'), ('opening_opposition', 'opening_opposition'), ('closing_opposition', 'closing_opposition')], max_length=60)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='room_teams', to='tournaments.tournamentroom')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='room_teams', to='tournaments.tournamentteam')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentUserSpeakerPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speaker_ponits', models.IntegerField()),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='speaker_points', to='tournaments.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='speaker_points', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
